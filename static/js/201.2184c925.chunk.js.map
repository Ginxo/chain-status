{"version":3,"file":"static/js/201.2184c925.chunk.js","mappings":"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","sources":["components/checks/CheckIconFactory.tsx","components/pullrequests/List.tsx","components/current-status/ContainerHeader.tsx","components/current-status/Container.tsx","components/current-status/ListItem.tsx","components/pullrequests/PullRequestCheckTag.tsx","components/pullrequests/PullRequestStatistics.tsx","components/shared/PullRequestStatisticErrorIndex.tsx","components/shared/StatisticDate.tsx","../../../node_modules/@ant-design/icons-svg/es/asn/NodeCollapseOutlined.js","../../../node_modules/@ant-design/icons/es/icons/NodeCollapseOutlined.js"],"sourcesContent":["import {\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  MinusCircleOutlined,\n  SyncOutlined\n} from \"@ant-design/icons\";\nimport React from \"react\";\nimport { ICheck } from \"../../model/check.model\";\nimport { CHECKS } from \"../../shared/constants\";\n\ninterface ICheckIconFactory {\n  check?: ICheck;\n  conclusion?: string;\n  status?: string;\n  size?: number;\n}\n\nexport const CheckIconFactory: React.FC<ICheckIconFactory> = props => {\n  const conclusionToSwitch = props.check?.conclusion ?? props.conclusion ?? \"\";\n  const statusToSwitch = props.check?.status ?? props.status ?? \"\";\n  switch (conclusionToSwitch) {\n    case CHECKS.CONCLUSION.SUCCESS:\n      return (\n        <CheckCircleOutlined\n          style={{ fontSize: props.size ?? 14, color: \"#70cf41\" }}\n        />\n      );\n    case CHECKS.CONCLUSION.FAILURE:\n      return (\n        <CloseCircleOutlined\n          style={{ fontSize: props.size ?? 14, color: \"#ff6b6d\" }}\n        />\n      );\n    case CHECKS.CONCLUSION.CANCELLED:\n    case CHECKS.CONCLUSION.SKIPPED:\n      return (\n        <MinusCircleOutlined\n          style={{ fontSize: props.size ?? 14, color: \"#faad14\" }}\n        />\n      );\n    case CHECKS.CONCLUSION.PENDING:\n      return (\n        <SyncOutlined\n          style={{ fontSize: props.size ?? 14, color: \"#42a5ff\" }}\n          spin\n        />\n      );\n    default:\n      switch (statusToSwitch) {\n        case CHECKS.STATUS.IN_PROGRESS:\n        case CHECKS.STATUS.QUEUED:\n          return (\n            <SyncOutlined\n              style={{ fontSize: props.size ?? 14, color: \"#42a5ff\" }}\n              spin\n            />\n          );\n        default:\n          return null;\n      }\n  }\n};\n\nexport default CheckIconFactory;\n","import { List as AntdList } from \"antd\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { IProject } from \"../../model/project.model\";\nimport { IPullRequest } from \"../../model/pullrequest.model\";\nimport { IRootState } from \"../../service\";\nimport { getProjectId } from \"../../utils/id.utils\";\n\nconst ListItem = React.lazy(() => import(\"./ListItem\"));\n\ninterface IList {\n  pullRequests: IPullRequest[];\n  project: IProject;\n}\n\nexport const List: React.FC<IList> = props => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const sectionsShown = useSelector(\n    (store: IRootState) => store.layout.sectionsShown\n  );\n  useEffect(() => {\n    if (props.project.name) {\n      if (sectionsShown.includes(getProjectId(props.project))) {\n        setLoading(false);\n      }\n    }\n  }, [props.pullRequests, sectionsShown, sectionsShown.length, props.project]);\n\n  return (\n    <Suspense fallback={<AntdList header={<h3>Pull Request List</h3>} loading />}>\n      <AntdList\n        header={<h3>Pull Request List</h3>}\n        className=\"demo-loadmore-list\"\n        itemLayout=\"vertical\"\n        dataSource={props.pullRequests}\n        // loading={loading}\n        renderItem={pullRequest => (\n          <ListItem\n            key={pullRequest.number}\n            pullRequest={pullRequest}\n            project={props.project}\n            loading={loading}\n            hideUserAvatar={false}\n          />\n        )}\n      />\n    </Suspense>\n  );\n};\n\nexport default List;\n","import { LinkOutlined, NodeCollapseOutlined } from \"@ant-design/icons\";\nimport { Button, Col, PageHeader, Row, Statistic, Tag } from \"antd\";\nimport React, { Suspense } from \"react\";\nimport { IProject } from \"../../model/project.model\";\nimport { APP_TIMESTAMP_FORMAT, STATISTICS_STYLE } from \"../../shared/constants\";\nimport Loading from \"../shared/Loading\";\nimport StatisticDate from \"../shared/StatisticDate\";\nimport PullRequestStatisticErrorIndex from \"../shared/PullRequestStatisticErrorIndex\";\nimport moment from \"moment\";\n\nconst PullRequestStatisticErrorIndexByPullRequest = React.lazy(\n  () => import(\"../shared/PullRequestStatisticErrorIndexByPullRequest\")\n);\n\ninterface IContainerHeader {\n  project: IProject;\n}\n\nexport const ContainerHeader: React.FC<IContainerHeader> = props => {\n  return (\n    <PageHeader\n      className=\"site-page-header\"\n      title={\n        <Button\n          type=\"link\"\n          href={props.project.html_url}\n          target=\"_blank\"\n          icon={<LinkOutlined />}\n          style={{ padding: 0, ...STATISTICS_STYLE, fontWeight: \"bold\" }}\n        >\n          {props.project.name ?? props.project.key}\n        </Button>\n      }\n      subTitle={props.project.description}\n      extra={[]}\n    >\n      <Row gutter={16}>\n        <Col>\n          <Statistic\n            title=\"Number of Pull Requests\"\n            prefix={<NodeCollapseOutlined />}\n            value={props.project.pullRequests.length}\n            valueStyle={STATISTICS_STYLE}\n            suffix={\n              <Button\n                type=\"link\"\n                href={props.project.html_url}\n                target=\"_blank\"\n                icon={<LinkOutlined />}\n                style={{ padding: 0 }}\n              />\n            }\n          />\n        </Col>\n        <Col>\n          <PullRequestStatisticErrorIndex\n            title=\"Error Index\"\n            pullRequests={props.project.pullRequests}\n            placement=\"right\"\n            popoverContent={\n              props.project.pullRequests?.length ? (\n                <Suspense fallback={<Loading />}>\n                  <PullRequestStatisticErrorIndexByPullRequest project={props.project} />\n                </Suspense>\n              ) : null\n            }\n          />\n        </Col>\n        <Col>\n          <Statistic\n            title=\"Language\"\n            valueStyle={{ ...STATISTICS_STYLE, display: \"none\" }}\n          />\n          <Tag style={{ marginTop: 5 }}>{props.project.language}</Tag>\n        </Col>\n        <Col>\n          <Statistic\n            title=\"Default Branch\"\n            valueStyle={{ ...STATISTICS_STYLE, display: \"none\" }}\n          />\n          <Tag style={{ marginTop: 5 }}>{props.project.default_branch}</Tag>\n        </Col>\n        <Col>\n          {props.project.updated_at ? (\n            <Suspense fallback={<Loading style={{ fontSize: 16 }} />}>\n              <StatisticDate\n                date={moment(\n                  new Date(Date.parse(props.project.updated_at))\n                ).format(APP_TIMESTAMP_FORMAT)}\n                text=\"Since Last Updating\"\n              />\n            </Suspense>\n          ) : null}\n        </Col>\n      </Row>\n    </PageHeader>\n  );\n};\n\nexport default ContainerHeader;\n","import { Col, Row } from \"antd\";\nimport React from \"react\";\nimport { IProject } from \"../../model/project.model\";\nimport { List as PullRequestList } from \"../pullrequests/List\";\nimport ContainerHeader from \"./ContainerHeader\";\n\ninterface IContainer {\n  project: IProject;\n}\nexport const Container: React.FC<IContainer> = props => {\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <ContainerHeader project={props.project} />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24} style={{ padding: 24 }}>\n          <PullRequestList\n            pullRequests={props.project.pullRequests}\n            project={props.project}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Container;\n","import { NodeCollapseOutlined } from \"@ant-design/icons\";\nimport { Card, List, Tag, Tooltip, Typography } from \"antd\";\nimport React, { Suspense, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IProject } from \"../../model/project.model\";\nimport { IRootState } from \"../../service\";\nimport * as layoutService from \"../../service/layout.service\";\nimport { STATUS_MARGIN_TOP } from \"../../shared/constants\";\nimport { alphabeticallySort } from \"../../utils/common.utils\";\nimport { getProjectId } from \"../../utils/id.utils\";\nimport PullRequestCheckTag from \"../pullrequests/PullRequestCheckTag\";\nimport PullRequestStatistics from \"../pullrequests/PullRequestStatistics\";\nimport Loading from \"../shared/Loading\";\nimport Container from \"./Container\";\n\ninterface IListItem {\n  project: IProject;\n}\nexport const ListItem: React.FC<IListItem> = props => {\n  const dispatch = useDispatch();\n  const filter = useSelector(\n    (store: IRootState) => store.pullrequestFilter.filter\n  );\n\n  useEffect(() => {\n    if (props.project) {\n      dispatch(layoutService.pushItemLoaded(getProjectId(props.project)));\n    }\n    return () => {\n      dispatch(layoutService.popItemLoaded(getProjectId(props.project)));\n    };\n  }, [dispatch, filter, props.project]);\n\n  return (\n    <List.Item\n      id={getProjectId(props.project)}\n      style={{\n        marginTop: 0,\n        marginBottom: 8,\n        padding: 0,\n        scrollMarginTop: STATUS_MARGIN_TOP\n      }}\n    >\n      <Card\n        title={\n          <Typography.Title level={4}>\n            <PullRequestCheckTag\n              title=\"Number of pull requests\"\n              value={props.project.pullRequests.length}\n              color=\"default\"\n              icon={<NodeCollapseOutlined />}\n              showZero={true}\n            />\n            {props.project.key}\n          </Typography.Title>\n        }\n        key={props.project.key}\n        extra={[\n          <Tooltip key=\"affected-branches-tooltip\" title=\"Affected Branches\">\n            {Array.from(\n              new Set(props.project.pullRequests.map(e => e.base?.ref))\n            )\n              .filter(e => e)\n              .sort(alphabeticallySort)\n              .map(e => (\n                <Tag key={e}>{e}</Tag>\n              ))}\n          </Tooltip>,\n          <Suspense\n            key=\"affected-branches-statistics\"\n            fallback={<Loading style={{ fontSize: 16 }} />}\n          >\n            <PullRequestStatistics pullRequests={props.project.pullRequests} />\n          </Suspense>\n        ]}\n        style={{\n          width: \"100%\",\n          marginTop: 0,\n          paddingTop: 0,\n          marginBottom: 0\n        }}\n      >\n        <Container project={props.project} />\n      </Card>\n    </List.Item>\n  );\n};\n\nexport default ListItem;\n","import { Tag, Tooltip } from \"antd\";\nimport React from \"react\";\n\ninterface IPullRequestCheckTag {\n  title?: string;\n  value: number;\n  color: string;\n  icon?: React.ReactNode;\n  showZero?: boolean;\n}\nexport const PullRequestCheckTag: React.FC<IPullRequestCheckTag> = props =>\n  props.showZero || props.value > 0 ? (\n    props.title ? (\n      <Tooltip placement=\"top\" title={props.title}>\n        <Tag color={props.color} icon={props.icon}>\n          {props.value}\n        </Tag>\n      </Tooltip>\n    ) : (\n      <Tag color={props.color} icon={props.icon}>\n        {props.value}\n      </Tag>\n    )\n  ) : null;\n\nexport default PullRequestCheckTag;\n","import { EyeOutlined } from \"@ant-design/icons\";\nimport { Button, Skeleton, Tooltip } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ICheck } from \"../../model/check.model\";\nimport { IPullRequest } from \"../../model/pullrequest.model\";\nimport * as layoutService from \"../../service/layout.service\";\nimport { CHECKS } from \"../../shared/constants\";\nimport CheckIconFactory from \"../checks/CheckIconFactory\";\nimport PullRequestCheckTag from \"./PullRequestCheckTag\";\n\ninterface IPullRequestStatistics {\n  pullRequests: IPullRequest[];\n}\nexport const PullRequestStatistics: React.FC<\n  IPullRequestStatistics\n> = props => {\n  const dispatch = useDispatch();\n  const openChecksDrawer = (pullRequests: IPullRequest[]) =>\n    dispatch(layoutService.openChecksDrawer(pullRequests));\n  const [successPullRequests, setSuccessPullRequests] = useState<\n    IPullRequest[]\n  >([]);\n  const [failurePullRequests, setFailurePullRequests] = useState<\n    IPullRequest[]\n  >([]);\n  const [runningPullRequests, setRunningPullRequests] = useState<\n    IPullRequest[]\n  >([]);\n  const [skipPullRequests, setSkipPullRequests] = useState<IPullRequest[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const filterPullRequests = (\n    pullRequests: IPullRequest[],\n    filter: (check: ICheck) => boolean\n  ): IPullRequest[] =>\n    pullRequests.reduce((acc: IPullRequest[], pr: IPullRequest) => {\n      const pullRequest: IPullRequest = { ...pr };\n      pullRequest.checks = pr.checks.filter(filter);\n      if (pullRequest.checks.length) {\n        acc.push(pullRequest);\n      }\n      return acc;\n    }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    if (props.pullRequests.length) {\n      setSuccessPullRequests(\n        filterPullRequests(\n          props.pullRequests,\n          check => check.conclusion === CHECKS.CONCLUSION.SUCCESS\n        )\n      );\n      setFailurePullRequests(\n        filterPullRequests(\n          props.pullRequests,\n          check => check.conclusion === CHECKS.CONCLUSION.FAILURE\n        )\n      );\n      setRunningPullRequests(\n        filterPullRequests(\n          props.pullRequests,\n          check =>\n            check.status !== undefined &&\n            [CHECKS.STATUS.IN_PROGRESS, CHECKS.STATUS.QUEUED].includes(\n              check.status\n            )\n        )\n      );\n      setSkipPullRequests(\n        filterPullRequests(\n          props.pullRequests,\n          check =>\n            check.conclusion !== undefined &&\n            [CHECKS.CONCLUSION.SKIPPED, CHECKS.CONCLUSION.CANCELLED].includes(\n              check.conclusion\n            )\n        )\n      );\n    }\n    setLoading(false);\n  }, [props.pullRequests]);\n\n  const CheckButton = (props: {\n    pullRequests: IPullRequest[];\n    titlePreffix: string;\n    children: any;\n  }) => (\n    <Tooltip\n      title={`${props.titlePreffix} Get Check Details (${\n        props.pullRequests.flatMap(pr => pr.checks).length\n      })`}\n    >\n      <Button\n        type=\"link\"\n        style={{ padding: 0, margin: 0 }}\n        onClick={() => openChecksDrawer(props.pullRequests)}\n      >\n        {props.children}\n      </Button>\n    </Tooltip>\n  );\n\n  return loading ? (\n    <Skeleton.Input style={{ width: 150 }} />\n  ) : (\n    <>\n      <CheckButton\n        pullRequests={successPullRequests}\n        titlePreffix=\"Number of success checks. \"\n      >\n        <PullRequestCheckTag\n          value={successPullRequests.flatMap(pr => pr.checks).length}\n          color=\"success\"\n          icon={<CheckIconFactory conclusion={CHECKS.CONCLUSION.SUCCESS} />}\n        />\n      </CheckButton>\n      <CheckButton\n        pullRequests={failurePullRequests}\n        titlePreffix=\"Number of failure checks. \"\n      >\n        <PullRequestCheckTag\n          value={failurePullRequests.flatMap(pr => pr.checks).length}\n          color=\"error\"\n          icon={<CheckIconFactory conclusion={CHECKS.CONCLUSION.FAILURE} />}\n        />\n      </CheckButton>\n      <CheckButton\n        pullRequests={runningPullRequests}\n        titlePreffix=\"Number of running/queued checks. \"\n      >\n        <PullRequestCheckTag\n          value={runningPullRequests.flatMap(pr => pr.checks).length}\n          color=\"processing\"\n          icon={<CheckIconFactory status={CHECKS.STATUS.IN_PROGRESS} />}\n        />\n      </CheckButton>\n      <CheckButton\n        pullRequests={skipPullRequests}\n        titlePreffix=\"Number of skipped/aborted checks. \"\n      >\n        <PullRequestCheckTag\n          value={skipPullRequests.flatMap(pr => pr.checks).length}\n          color=\"warning\"\n          icon={<CheckIconFactory conclusion={CHECKS.CONCLUSION.CANCELLED} />}\n        />\n      </CheckButton>\n\n      {props.pullRequests.flatMap(pr => pr.checks).length ? (\n        <CheckButton pullRequests={props.pullRequests} titlePreffix=\"\">\n          <EyeOutlined />\n        </CheckButton>\n      ) : null}\n    </>\n  );\n};\n\nexport default PullRequestStatistics;\n","import { Statistic, Popover, Tooltip } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { RenderFunction, TooltipPlacement } from \"antd/lib/tooltip\";\nimport React, { useEffect, useState } from \"react\";\nimport { IPullRequest } from \"../../model/pullrequest.model\";\nimport { COLOURS, STATISTICS_STYLE } from \"../../shared/constants\";\nimport { calculateErrorIndex } from \"../../utils/pullrequest.utils\";\n\ninterface IPullRequestStatisticErrorIndex {\n  title?: string;\n  pullRequests: IPullRequest[];\n  popoverContent?: React.ReactNode | RenderFunction;\n  size?: number;\n  placement?: TooltipPlacement;\n}\nexport const PullRequestStatisticErrorIndex: React.FC<\n  IPullRequestStatisticErrorIndex\n> = props => {\n  const [errorIndex, setErrorIndex] = useState<number | undefined>(undefined);\n  const [color, setColor] = useState<string>(COLOURS.GREEN);\n\n  const fontSizeStyle = props.size\n    ? { fontSize: props.size }\n    : STATISTICS_STYLE;\n\n  useEffect(() => {\n    if (props.pullRequests?.length) {\n      const value = calculateErrorIndex(props.pullRequests);\n      setErrorIndex(value);\n      setColor(value <= 20 ? COLOURS.GREEN : COLOURS.RED);\n    } else {\n      setErrorIndex(undefined);\n      setColor(COLOURS.GREEN);\n    }\n  }, [props.pullRequests]);\n\n  return props.popoverContent ? (\n    <Popover content={props.popoverContent} placement={props.placement}>\n      <Statistic\n        prefix={\n          <Tooltip title=\"This index is calculated by n_failures/n_checks\">\n            <InfoCircleOutlined style={{ fontSize: 12 }} />\n          </Tooltip>\n        }\n        title={props.title}\n        value={errorIndex}\n        precision={2}\n        valueStyle={{\n          ...fontSizeStyle,\n          color,\n          fontWeight: \"bold\"\n        }}\n        suffix=\"%\"\n      />\n    </Popover>\n  ) : (\n    <Statistic\n      title={props.title}\n      value={errorIndex}\n      precision={2}\n      valueStyle={{\n        ...fontSizeStyle,\n        color,\n        fontWeight: \"bold\"\n      }}\n      suffix=\"%\"\n    />\n  );\n};\n\nexport default PullRequestStatisticErrorIndex;\n","import { Statistic } from \"antd\";\nimport React from \"react\";\nimport { STATISTICS_STYLE } from \"../../shared/constants\";\n\ninterface IStatisticDate {\n  date: string | undefined;\n  text: string;\n}\nexport const StatisticDate: React.FC<IStatisticDate> = props => {\n  return (\n    <Statistic\n      title={props.text}\n      loading={!props.date}\n      valueStyle={STATISTICS_STYLE}\n      value={props.date ? props.date.toLocaleString() : undefined}\n    />\n  );\n};\n\nexport default StatisticDate;\n","// This icon file is generated automatically.\nvar NodeCollapseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M952 612c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H298a95.92 95.92 0 00-89-60c-53 0-96 43-96 96s43 96 96 96c40.3 0 74.8-24.8 89-60h150.3v152c0 55.2 44.8 100 100 100H952c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H548.3c-15.5 0-28-12.5-28-28V612H952zM451.7 313.7l172.5 136.2c6.3 5.1 15.8.5 15.8-7.7V344h264c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8H640v-98.2c0-8.1-9.4-12.8-15.8-7.7L451.7 298.3a9.9 9.9 0 000 15.4z\" } }] }, \"name\": \"node-collapse\", \"theme\": \"outlined\" };\nexport default NodeCollapseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport NodeCollapseOutlinedSvg from \"@ant-design/icons-svg/es/asn/NodeCollapseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar NodeCollapseOutlined = function NodeCollapseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: NodeCollapseOutlinedSvg\n  }));\n};\n\nNodeCollapseOutlined.displayName = 'NodeCollapseOutlined';\nexport default /*#__PURE__*/React.forwardRef(NodeCollapseOutlined);"],"names":["props","conclusionToSwitch","check","conclusion","statusToSwitch","status","CHECKS","style","fontSize","size","color","spin","ListItem","React","List","useState","loading","setLoading","sectionsShown","useSelector","store","layout","useEffect","project","name","includes","getProjectId","pullRequests","length","Suspense","fallback","header","className","itemLayout","dataSource","renderItem","pullRequest","hideUserAvatar","number","PullRequestStatisticErrorIndexByPullRequest","title","type","href","html_url","target","icon","LinkOutlined","padding","STATISTICS_STYLE","fontWeight","key","subTitle","description","extra","gutter","prefix","NodeCollapseOutlined","value","valueStyle","suffix","PullRequestStatisticErrorIndex","placement","popoverContent","Loading","display","marginTop","language","default_branch","updated_at","StatisticDate","date","moment","Date","parse","format","APP_TIMESTAMP_FORMAT","text","span","dispatch","useDispatch","filter","pullrequestFilter","layoutService","id","marginBottom","scrollMarginTop","STATUS_MARGIN_TOP","level","PullRequestCheckTag","showZero","Array","from","Set","map","e","base","ref","sort","alphabeticallySort","PullRequestStatistics","width","paddingTop","successPullRequests","setSuccessPullRequests","failurePullRequests","setFailurePullRequests","runningPullRequests","setRunningPullRequests","skipPullRequests","setSkipPullRequests","filterPullRequests","reduce","acc","pr","checks","push","undefined","CheckButton","titlePreffix","flatMap","margin","onClick","children","errorIndex","setErrorIndex","COLOURS","setColor","fontSizeStyle","calculateErrorIndex","content","precision","toLocaleString","AntdIcon","_objectSpread","NodeCollapseOutlinedSvg","displayName"],"sourceRoot":""}