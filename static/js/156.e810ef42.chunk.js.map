{"version":3,"file":"static/js/156.e810ef42.chunk.js","mappings":"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","sources":["components/current-status/CurrentStatusHeader.tsx","components/shared/StatisticDate.tsx","components/shared/StatisticErrorIndex.tsx"],"sourcesContent":["import {\n  InfoCircleOutlined,\n  LinkOutlined,\n  NodeCollapseOutlined,\n  ReloadOutlined,\n  PullRequestOutlined\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Card,\n  Col,\n  Modal,\n  PageHeader,\n  Popover,\n  Row,\n  Skeleton,\n  Statistic,\n  Tooltip,\n  Typography\n} from \"antd\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IRootState } from \"../../service\";\nimport { STATISTICS_STYLE } from \"../../shared/constants\";\nimport Loading from \"../shared/Loading\";\nimport StatisticDate from \"../shared/StatisticDate\";\nimport StatisticErrorIndex from \"../shared/StatisticErrorIndex\";\nimport * as dataService from \"../../service/data.service\";\n\nconst ProjectStatusInformation = React.lazy(\n  () => import(\"../shared/ProjectStatusInformation\")\n);\nconst StatisticPullRequests = React.lazy(\n  () => import(\"../shared/StatisticPullRequests\")\n);\nconst StatisticErrorIndexByProject = React.lazy(\n  () => import(\"../shared/StatisticErrorIndexByProject\")\n);\n\ninterface ICurrentStatusHeader {}\nexport const CurrentStatusHeader: React.FC<ICurrentStatusHeader> = props => {\n  const dispatch = useDispatch();\n  const data = useSelector((store: IRootState) => store.data.data);\n  const loading = useSelector((store: IRootState) => store.data.loading);\n  const [latestLoad, setLatestLoad] = useState<Date>(new Date());\n\n  const getData = () => {\n    dispatch(dataService.loadData());\n  };\n\n  useEffect(() => {\n    if (data?.projects) {\n      setLatestLoad(new Date());\n    }\n  }, [data]);\n\n  const infoModal = () =>\n    Modal.info({\n      content: (\n        <Suspense fallback={<Skeleton />}>\n          <ProjectStatusInformation />\n        </Suspense>\n      ),\n      onOk() {},\n      width: 1000,\n      centered: true\n    });\n  return (\n    <Card style={{ margin: 24, marginTop: 10 }}>\n      <PageHeader\n        title={\n          data.metadata?.title ? (\n            <Typography.Title level={2}>\n              {data.metadata?.title}\n            </Typography.Title>\n          ) : (\n            <Skeleton.Input style={{ width: 200 }} />\n          )\n        }\n        subTitle={\n          data.metadata?.subtitle ?? <Skeleton.Input style={{ width: 400 }} />\n        }\n        style={{ padding: 0 }}\n        extra={[\n          <Tooltip key=\"reaload\" title=\"Reload information from service\">\n            <Button\n              key=\"reload\"\n              type=\"primary\"\n              icon={<ReloadOutlined />}\n              loading={loading}\n              onClick={getData}\n            >\n              Reload\n            </Button>\n          </Tooltip>,\n          <Tooltip key=\"info\" title=\"Show project status information\">\n            <Button\n              key=\"info\"\n              type=\"text\"\n              shape=\"circle\"\n              icon={<InfoCircleOutlined />}\n              onClick={infoModal}\n            />\n          </Tooltip>\n        ]}\n      >\n        <Row gutter={16}>\n          <Col>\n            <Statistic\n              title=\"Generated By\"\n              value={data.metadata?.createdBy}\n              valueStyle={STATISTICS_STYLE}\n              suffix={\n                data.metadata?.createdUrl ? (\n                  <Tooltip title=\"Visit job generating the report\">\n                    <Button\n                      type=\"link\"\n                      href={data.metadata?.createdUrl}\n                      target=\"_blank\"\n                      icon={<LinkOutlined />}\n                      style={{\n                        padding: 0,\n                        ...STATISTICS_STYLE,\n                        fontWeight: \"bold\"\n                      }}\n                    />\n                  </Tooltip>\n                ) : null\n              }\n            />\n          </Col>\n          <Col>\n            <Popover\n              content={\n                <Suspense fallback={<Loading />}>\n                  <StatisticPullRequests projects={data.projects} size={12} />\n                </Suspense>\n              }\n              placement=\"bottom\"\n            >\n              <Statistic\n                title=\"Number of Projects\"\n                prefix={<NodeCollapseOutlined />}\n                value={data.projects.length}\n                valueStyle={{ ...STATISTICS_STYLE, fontWeight: \"bold\" }}\n              />\n            </Popover>\n          </Col>\n          <Col>\n            <Statistic\n              title=\"Number of Pull Requests\"\n              prefix={<PullRequestOutlined />}\n              value={data.projects.flatMap(p => p.pullRequests).length}\n              valueStyle={STATISTICS_STYLE}\n            />\n          </Col>\n          <Col>\n            <StatisticErrorIndex\n              title=\"Error Index\"\n              pullRequests={data.projects.flatMap(\n                project => project.pullRequests\n              )}\n              placement=\"bottom\"\n              popoverContent={\n                <Suspense fallback={<Loading />}>\n                  <StatisticErrorIndexByProject projects={data.projects} />\n                </Suspense>\n              }\n            />\n          </Col>\n          <Col>\n            <Suspense fallback={<Loading size={16} />}>\n              <StatisticDate\n                date={\n                  data.metadata?.date\n                    ? new Date(Date.parse(data.metadata?.date))\n                    : new Date()\n                }\n                text=\"Creation Date\"\n                intervalSeconds={1}\n              />\n            </Suspense>\n          </Col>\n          <Col>\n            <Suspense fallback={<Loading size={16} />}>\n              <StatisticDate\n                date={latestLoad}\n                text=\"Latest Load\"\n                intervalSeconds={1}\n              />\n            </Suspense>\n          </Col>\n        </Row>\n      </PageHeader>\n    </Card>\n  );\n};\n\nexport default CurrentStatusHeader;\n","import { Statistic } from \"antd\";\nimport React from \"react\";\nimport { STATISTICS_STYLE } from \"../../shared/constants\";\n\ninterface IStatisticDate {\n  date: Date;\n  intervalSeconds?: number;\n  text: string;\n}\nexport const StatisticDate: React.FC<IStatisticDate> = props => {\n  return (\n    <>\n      <Statistic\n        title={props.text}\n        loading={!props.date}\n        valueStyle={STATISTICS_STYLE}\n        value={props.date.toLocaleString()}\n      />\n    </>\n  );\n};\n\nexport default StatisticDate;\n","import { Statistic, Popover, Tooltip } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { RenderFunction, TooltipPlacement } from \"antd/lib/tooltip\";\nimport React, { useEffect, useState } from \"react\";\nimport { IPullRequest } from \"../../model/pullrequest.model\";\nimport { STATISTICS_STYLE } from \"../../shared/constants\";\nimport { calculateErrorIndex } from \"../../utils/pullrequest.utils\";\n\ninterface IStaticErrorIndex {\n  title?: string;\n  pullRequests: IPullRequest[];\n  popoverContent?: React.ReactNode | RenderFunction;\n  size?: number;\n  placement?: TooltipPlacement;\n}\nexport const StaticErrorIndex: React.FC<IStaticErrorIndex> = props => {\n  const [errorIndex, setErrorIndex] = useState<number>(0);\n\n  const fontSizeStyle = props.size\n    ? { fontSize: props.size }\n    : STATISTICS_STYLE;\n\n  useEffect(() => {\n    if (props.pullRequests?.length) {\n      setErrorIndex(calculateErrorIndex(props.pullRequests));\n    }\n  }, [props.pullRequests]);\n\n  return props.popoverContent ? (\n    <Popover content={props.popoverContent} placement={props.placement}>\n      <Statistic\n        prefix={\n          <Tooltip title=\"This index is calculated by n_failures/n_checks\">\n            <InfoCircleOutlined style={{ fontSize: 12 }} />\n          </Tooltip>\n        }\n        title={props.title}\n        value={errorIndex}\n        precision={2}\n        valueStyle={{\n          ...fontSizeStyle,\n          color: errorIndex <= 20 ? \"#3f8600\" : \"#cf1322\",\n          fontWeight: \"bold\"\n        }}\n        suffix=\"%\"\n      />\n    </Popover>\n  ) : (\n    <Statistic\n      title={props.title}\n      value={errorIndex}\n      precision={2}\n      valueStyle={{\n        ...fontSizeStyle,\n        color: errorIndex <= 20 ? \"#3f8600\" : \"#cf1322\",\n        fontWeight: \"bold\"\n      }}\n      suffix=\"%\"\n    />\n  );\n};\n\nexport default StaticErrorIndex;\n"],"names":["ProjectStatusInformation","React","StatisticPullRequests","StatisticErrorIndexByProject","CurrentStatusHeader","props","dispatch","useDispatch","data","useSelector","store","loading","useState","Date","latestLoad","setLatestLoad","useEffect","projects","style","margin","marginTop","title","metadata","level","width","subTitle","subtitle","padding","extra","type","icon","onClick","dataService","shape","Modal","content","Suspense","fallback","onOk","centered","gutter","value","createdBy","valueStyle","STATISTICS_STYLE","suffix","createdUrl","href","target","fontWeight","size","placement","prefix","length","flatMap","p","pullRequests","project","popoverContent","date","parse","text","intervalSeconds","toLocaleString","errorIndex","setErrorIndex","fontSizeStyle","fontSize","calculateErrorIndex","precision","color"],"sourceRoot":""}